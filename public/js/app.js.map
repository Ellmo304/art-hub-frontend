{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","logout","protectStates","e","toState","payload","getPayload","main","isCurrentUser","id","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","message","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","User","$resource","update","method","UsersIndexController","usersIndex","all","query","UsersShowController","deleteUser","usersShow","$remove","Number","params","get","UsersEditController","usersEdit","$update","currentUser","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('artHub', ['ngResource', 'ui.router', 'satellizer'])\n.constant('API_URL', 'http://localhost:3000/api')\n.config(Auth);\n\nAuth.$inject = [ '$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('artHub')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('artHub')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function protectStates(e, toState) {\n    const payload = $auth.getPayload();\n    if(payload) {\n      main.isCurrentUser = $auth.getPayload().id;\n    }\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', protectStates);\n\n  main.logout = logout;\n}\n","angular.module('artHub')\n.config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('usersIndex', {\n    url: '/users',\n    templateUrl: '/templates/users/usersIndex.html',\n    controller: 'UsersIndexController as usersIndex'\n  })\n  .state('usersShow', {\n    url: '/users/:id',\n    templateUrl: '/templates/users/usersShow.html',\n    controller: 'UsersShowController as usersShow'\n  })\n  .state('usersEdit', {\n    url: '/users/:id/edit',\n    templateUrl: '/templates/users/usersEdit.html',\n    controller: 'UsersEditController as usersEdit'\n  })\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: 'templates/login.html',\n    controller: 'LoginController as login'\n  });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('artHub')\n.factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('artHub')\n.controller('UsersIndexController', UsersIndexController)\n.controller('UsersShowController', UsersShowController)\n.controller('UsersEditController', UsersEditController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n  usersIndex.all = User.query();\n}\n\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  usersShow.isCurrentUser = isCurrentUser;\n  usersShow.deleteUser = deleteUser;\n}\n\n\nUsersEditController.$inject = ['User', '$state', '$auth'];\nfunction UsersEditController(User, $state, $auth) {\n  const usersEdit = this;\n  usersEdit.user = User.get($state.params);\n  User.get($state.params, (currentUser) => {\n    usersEdit.user = currentUser;\n    if(usersEdit.user.id !== $auth.getPayload().id) {\n      $state.go('login');\n    }\n  });\n\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  usersEdit.update = update;\n}\n"]}
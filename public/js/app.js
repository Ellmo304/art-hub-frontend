"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function r(){e.signup(o.user).then(function(){t.go("login")})}var o=this;o.user={},o.submit=r}function LoginController(e,t){function r(){e.login(o.credentials).then(function(){t.go("usersIndex")})}var o=this;o.credentials={},o.submit=r}function Comment(e,t){return new e(t+"/comments/:id",{id:"@id"},{update:{method:"PUT"}})}function CommentsNewController(e,t,r,o){function l(){e.save(i.comment,function(){r.go("commentsIndex")})}var i=this;i.comment={},i.comment.user_id=o.getPayload().id,i.comment.exhibition_id=r.params.id,i.exhibitionsAll=t.query(),i.create=l}function CommentsIndexController(e){var t=this;t.all=e.query()}function CommentsShowController(e,t,r){function o(){l.comment.$remove(function(){t.go("commentsIndex")})}var l=this;l.comment=e.get(t.params),l.deleteComment=o}function CommentsEditController(e,t,r,o){function l(){i.comment.$update(function(){r.go("commentsShow",r.params)})}var i=this;i.comment=e.get(r.params),i.exhibitionsAll=t.query(),i.update=l}function Exhibition(e,t){return new e(t+"/exhibitions/:id",{id:"@id"},{update:{method:"PUT"}})}function ExhibitionsNewController(e,t,r){function o(){console.log(l.exhibition),e.save(l.exhibition,function(){r.go("exhibitionsIndex")})}var l=this;l.exhibition={},l.galleriesAll=t.query(),l.create=o}function ExhibitionsIndexController(e){var t=this;t.all=e.query()}function ExhibitionsShowController(e,t,r){function o(){l.exhibition.$remove(function(){t.go("exhibitionsIndex")})}var l=this;l.exhibition=e.get(t.params),l.deleteExhibition=o}function ExhibitionsEditController(e,t,r,o){function l(){i.exhibition.$update(function(){r.go("exhibitionsShow",r.params)})}var i=this;i.exhibition=e.get(r.params),i.galleriesAll=t.query(),i.update=l}function GalleriesNewController(e,t){function r(){e.save(o.gallery,function(){t.go("galleriesIndex")})}var o=this;o.gallery={},o.create=r}function GalleriesIndexController(e){var t=this;t.all=e.query()}function GalleriesShowController(e,t,r){function o(){l.gallery.$remove(function(){t.go("galleriesIndex")})}var l=this;l.gallery=e.get(t.params),l.deleteGallery=o}function GalleriesEditController(e,t,r){function o(){l.gallery.$update(function(){t.go("galleriesShow",t.params)})}var l=this;l.gallery=e.get(t.params),l.update=o}function Gallery(e,t){return new e(t+"/galleries/:id",{id:"@id"},{update:{method:"PUT"}})}function MainController(e,t,r){function o(){e.logout().then(function(){t.go("usersIndex")})}function l(r,o){var l=e.getPayload();l&&(i.isCurrentUser=e.getPayload().id),!e.isAuthenticated()&&n.includes(o.name)&&(r.preventDefault(),t.go("login"))}var i=this;i.isLoggedIn=e.isAuthenticated,i.message=null;var n=["usersEdit"];r.$on("$stateChangeStart",l),i.logout=o}function Review(e,t){return new e(t+"/reviews/:id",{id:"@id"},{update:{method:"PUT"}})}function ReviewsNewController(e,t,r,o){function l(){e.save(i.review,function(){r.go("reviewsIndex")})}var i=this;i.review={},i.review.user_id=o.getPayload().id,i.review.exhibition_id=r.params.id,i.exhibitionsAll=t.query(),i.create=l}function ReviewsIndexController(e){var t=this;t.all=e.query()}function ReviewsShowController(e,t,r){function o(){l.review.$remove(function(){t.go("reviewsIndex")})}var l=this;l.review=e.get(t.params),l.deleteReview=o}function ReviewsEditController(e,t,r,o){function l(){i.review.$update(function(){r.go("reviewsShow",r.params)})}var i=this;i.review=e.get(r.params),i.exhibitionsAll=t.query(),i.update=l}function Router(e,t){e.state("home",{url:"/",templateUrl:"/templates/home.html"}).state("usersIndex",{url:"/users",templateUrl:"/templates/users/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/users/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/users/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("galleriesNew",{url:"/galleries/new",templateUrl:"/templates/galleries/galleriesNew.html",controller:"GalleriesNewController as galleriesNew"}).state("galleriesIndex",{url:"/galleries",templateUrl:"/templates/galleries/galleriesIndex.html",controller:"GalleriesIndexController as galleriesIndex"}).state("galleriesShow",{url:"/galleries/:id",templateUrl:"/templates/galleries/galleriesShow.html",controller:"GalleriesShowController as galleriesShow"}).state("galleriesEdit",{url:"/galleries/:id/edit",templateUrl:"/templates/galleries/galleriesEdit.html",controller:"GalleriesEditController as galleriesEdit"}).state("exhibitionsNew",{url:"/exhibitions/new",templateUrl:"/templates/exhibitions/exhibitionsNew.html",controller:"ExhibitionsNewController as exhibitionsNew"}).state("exhibitionsIndex",{url:"/exhibitions",templateUrl:"/templates/exhibitions/exhibitionsIndex.html",controller:"ExhibitionsIndexController as exhibitionsIndex"}).state("exhibitionsShow",{url:"/exhibitions/:id",templateUrl:"/templates/exhibitions/exhibitionsShow.html"}).state("exhibitionsEdit",{url:"/exhibitions/:id/edit",templateUrl:"/templates/exhibitions/exhibitionsEdit.html",controller:"ExhibitionsEditController as exhibitionsEdit"}).state("reviewsNew",{url:"/reviews/new",templateUrl:"/templates/reviews/reviewsNew.html",controller:"ReviewsNewController as reviewsNew"}).state("reviewsIndex",{url:"/reviews",templateUrl:"/templates/reviews/reviewsIndex.html",controller:"ReviewsIndexController as reviewsIndex"}).state("reviewsShow",{url:"/reviews/:id",templateUrl:"/templates/reviews/reviewsShow.html"}).state("reviewsEdit",{url:"/reviews/:id/edit",templateUrl:"/templates/reviews/reviewsEdit.html",controller:"ReviewsEditController as reviewsEdit"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"templates/login.html",controller:"LoginController as login"}),t.otherwise("/")}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,r){function o(){i.user.$remove(function(){t.go("usersIndex")})}function l(){return r.getPayload().id===Number(t.params.id)}var i=this;i.isLoggedIn=r.isAuthenticated,i.user=e.get(t.params),i.isCurrentUser=l,i.deleteUser=o}function UsersEditController(e,t,r){function o(){l.user.$update(function(){t.go("usersShow",t.params)})}var l=this;l.user=e.get(t.params),e.get(t.params,function(e){l.user=e,l.user.id!==r.getPayload().id&&t.go("login")}),l.update=o}angular.module("artHub",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("artHub").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("artHub").factory("Comment",Comment),Comment.$inject=["$resource","API_URL"],angular.module("artHub").controller("CommentsNewController",CommentsNewController).controller("CommentsIndexController",CommentsIndexController).controller("CommentsShowController",CommentsShowController).controller("CommentsEditController",CommentsEditController),CommentsNewController.$inject=["Comment","Exhibition","$state","$auth"],CommentsIndexController.$inject=["Comment"],CommentsShowController.$inject=["Comment","$state","$auth"],CommentsEditController.$inject=["Comment","Exhibition","$state","$auth"],angular.module("artHub").factory("Exhibition",Exhibition),Exhibition.$inject=["$resource","API_URL"],angular.module("artHub").controller("ExhibitionsNewController",ExhibitionsNewController).controller("ExhibitionsIndexController",ExhibitionsIndexController).controller("ExhibitionsShowController",ExhibitionsShowController).controller("ExhibitionsEditController",ExhibitionsEditController),ExhibitionsNewController.$inject=["Exhibition","Gallery","$state"],ExhibitionsIndexController.$inject=["Exhibition"],ExhibitionsShowController.$inject=["Exhibition","$state","$auth"],ExhibitionsEditController.$inject=["Exhibition","Gallery","$state","$auth"],angular.module("artHub").controller("GalleriesNewController",GalleriesNewController).controller("GalleriesIndexController",GalleriesIndexController).controller("GalleriesShowController",GalleriesShowController).controller("GalleriesEditController",GalleriesEditController),GalleriesNewController.$inject=["Gallery","$state"],GalleriesIndexController.$inject=["Gallery"],GalleriesShowController.$inject=["Gallery","$state","$auth"],GalleriesEditController.$inject=["Gallery","$state","$auth"],angular.module("artHub").factory("Gallery",Gallery),Gallery.$inject=["$resource","API_URL"],angular.module("artHub").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("artHub").factory("Review",Review),Review.$inject=["$resource","API_URL"],angular.module("artHub").controller("ReviewsNewController",ReviewsNewController).controller("ReviewsIndexController",ReviewsIndexController).controller("ReviewsShowController",ReviewsShowController).controller("ReviewsEditController",ReviewsEditController),ReviewsNewController.$inject=["Review","Exhibition","$state","$auth"],ReviewsIndexController.$inject=["Review"],ReviewsShowController.$inject=["Review","$state","$auth"],ReviewsEditController.$inject=["Review","Exhibition","$state","$auth"],angular.module("artHub").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("artHub").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("artHub").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state","$auth"];
//# sourceMappingURL=app.js.map

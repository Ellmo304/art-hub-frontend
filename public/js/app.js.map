{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/galleries.js","js/models/gallery.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","GalleriesNewController","Gallery","createGallery","save","galleriesNew","gallery","create","GalleriesIndexController","galleriesIndex","all","query","GalleriesShowController","deleteGallery","galleriesShow","$remove","get","params","GalleriesEditController","update","galleriesEdit","$update","$resource","id","method","MainController","$rootScope","logout","protectStates","e","toState","payload","getPayload","main","isCurrentUser","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","message","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","User","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","Number","UsersEditController","usersEdit","currentUser","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('artHub', ['ngResource', 'ui.router', 'satellizer'])\n.constant('API_URL', 'http://localhost:3000/api')\n.config(Auth);\n\nAuth.$inject = [ '$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('artHub')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('artHub')\n.controller('GalleriesNewController', GalleriesNewController)\n.controller('GalleriesIndexController', GalleriesIndexController)\n.controller('GalleriesShowController', GalleriesShowController)\n.controller('GalleriesEditController', GalleriesEditController);\n\n\nGalleriesNewController.$inject = ['Gallery', '$state'];\nfunction GalleriesNewController(Gallery, $state) {\n  const galleriesNew = this;\n  galleriesNew.gallery = {};\n\n  function createGallery() {\n    Gallery.save(galleriesNew.gallery, () => {\n      $state.go('galleriesIndex');\n    });\n  }\n  galleriesNew.create = createGallery;\n}\n\nGalleriesIndexController.$inject = ['Gallery'];\nfunction GalleriesIndexController(Gallery) {\n  const galleriesIndex = this;\n  galleriesIndex.all = Gallery.query();\n}\n\nGalleriesShowController.$inject = ['Gallery', '$state', '$auth'];\nfunction GalleriesShowController(Gallery, $state, $auth) {\n  const galleriesShow = this;\n\n  galleriesShow.gallery = Gallery.get($state.params);\n\n  function deleteGallery() {\n    galleriesShow.gallery.$remove(() => {\n      $state.go('galleriesIndex');\n    });\n  }\n  galleriesShow.deleteGallery = deleteGallery;\n}\n\n\nGalleriesEditController.$inject = ['Gallery', '$state', '$auth'];\nfunction GalleriesEditController(Gallery, $state, $auth) {\n  const galleriesEdit = this;\n  galleriesEdit.gallery = Gallery.get($state.params);\n  // Gallery.get($state.params, (currentGallery) => {\n  //   galleriesEdit.gallery = currentGallery;\n  //   if(galleriesEdit.gallery.id !== $auth.getPayload().id) {\n  //     $state.go('login');\n  //   }\n  // });\n\n\n  function update() {\n    galleriesEdit.gallery.$update(() => {\n      $state.go('galleriesShow', $state.params);\n    });\n  }\n  galleriesEdit.update = update;\n}\n","angular.module('artHub')\n.factory('Gallery', Gallery);\n\nGallery.$inject = ['$resource', 'API_URL'];\nfunction Gallery($resource, API_URL) {\n  return new $resource(`${API_URL}/galleries/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('artHub')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function protectStates(e, toState) {\n    const payload = $auth.getPayload();\n    if(payload) {\n      main.isCurrentUser = $auth.getPayload().id;\n    }\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', protectStates);\n\n  main.logout = logout;\n}\n","angular.module('artHub')\n.config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('usersIndex', {\n    url: '/users',\n    templateUrl: '/templates/users/usersIndex.html',\n    controller: 'UsersIndexController as usersIndex'\n  })\n  .state('usersShow', {\n    url: '/users/:id',\n    templateUrl: '/templates/users/usersShow.html',\n    controller: 'UsersShowController as usersShow'\n  })\n  .state('usersEdit', {\n    url: '/users/:id/edit',\n    templateUrl: '/templates/users/usersEdit.html',\n    controller: 'UsersEditController as usersEdit'\n  })\n  .state('galleriesNew', {\n    url: '/galleries/new',\n    templateUrl: '/templates/galleries/galleriesNew.html',\n    controller: 'GalleriesNewController as galleriesNew'\n  })\n  .state('galleriesIndex', {\n    url: '/galleries',\n    templateUrl: '/templates/galleries/galleriesIndex.html',\n    controller: 'GalleriesIndexController as galleriesIndex'\n  })\n  .state('galleriesShow', {\n    url: '/galleries/:id',\n    templateUrl: '/templates/galleries/galleriesShow.html',\n    controller: 'GalleriesShowController as galleriesShow'\n  })\n  .state('galleriesEdit', {\n    url: '/galleries/:id/edit',\n    templateUrl: '/templates/galleries/galleriesEdit.html',\n    controller: 'GalleriesEditController as galleriesEdit'\n  })\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: 'templates/login.html',\n    controller: 'LoginController as login'\n  });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('artHub')\n.factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('artHub')\n.controller('UsersIndexController', UsersIndexController)\n.controller('UsersShowController', UsersShowController)\n.controller('UsersEditController', UsersEditController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n  usersIndex.all = User.query();\n}\n\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  usersShow.isCurrentUser = isCurrentUser;\n  usersShow.deleteUser = deleteUser;\n}\n\n\nUsersEditController.$inject = ['User', '$state', '$auth'];\nfunction UsersEditController(User, $state, $auth) {\n  const usersEdit = this;\n  usersEdit.user = User.get($state.params);\n  User.get($state.params, (currentUser) => {\n    usersEdit.user = currentUser;\n    if(usersEdit.user.id !== $auth.getPayload().id) {\n      $state.go('login');\n    }\n  });\n\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  usersEdit.update = update;\n}\n"]}